HOUSEHOLD + RELATIONSHIP,
study_dist_hh, sum)
names(households)
table(households$DISTRICT)
table(sampling_frame$DISTRICT)
library(expss)
library(magrittr)
library(forcats)
library(haven)
library(tidyverse)
library(ggplot2)
library(gmodels)
# set working directory
setwd("C:/git/MALAWI/malawi/RCT/sampling")
# bring in all the census data of all households
census_list <- read_dta("census_data_2018.dta")
census_list <- census_list[ , -which(names(census_list) %in%
c("SEGMENT", "DATE_OF_BIRTH", "EA_CODE",
"Sex", "Residential_District" ))]
str(census_list)
class(census_list$DISTRICT)
# keep only the 6 study districts
val_lab(census_list$DISTRICT)
# (104- Rumphi; 105- Mzimba; 201- Kasungu; 203- Ntchisi;
# 204- Dowa; 207- Mchinji)
study_dist <- census_list[census_list$DISTRICT %in% c("201",
"204",
"104",
"105",
"203",
"207"), ]
val_lab(study_dist$DISTRICT) = num_lab("104 Rumphi
105 Mzimba
201 Kasungu
203 Ntchisi
204 Dowa
207 Mchinji")
val_lab(study_dist$DISTRICT)
# keeping RELATIONSHIP == 1 to remove duplicates for hhs
sampling_frame <- subset(study_dist, RELATIONSHIP == 1)
as.factor(study_dist_hh$DISTRICT)
as.integer(study_dist_hh$RELATIONSHIP)
as.factor(study_dist_hh$VILLAGE_NAME)
sampling_frame$number_hhs <- sampling_frame$RELATIONSHIP
remove(census_list, study_dist)
names(sampling_frame)
# aggregating to total up the number of households per VILLAGE_NAME
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +
GVH_NAME + VILLAGE_NAME + RESIDENCE +
HOUSEHOLD + RELATIONSHIP,
sampling_frame, sum)
table(sampling_frame_hhs$DISTRICT)
names(sampling_frame_hhs)
table(sampling_frame_hhs$DISTRICT)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +
GVH_NAME + VILLAGE_NAME + RESIDENCE +
HOUSEHOLD + RELATIONSHIP,
sampling_frame, sum)
table(sampling_frame_hhs$DISTRICT)
names(sampling_frame_hhs)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
sampling_frame_sort <- arrange(sampling_frame_hhs,
DISTRICT, TA_CODE, GVH_NAME,
VILLAGE_NAME, desc(number_hhs))
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
set.seed(782644413)
sampled_villages <- sample_n(sampling_frame_sort, 143)
sampled_villages
table(sampled_villages$VILLAGE_NAME)
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
frame <- aggregate(number_hhs ~ DISTRICT + TA_CODE + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
table(sampling_frame_hhs$DISTRICT)
table(frame$DISTRICT)
View(frame)
table(sampling_frame_hhs$number_hhs)
table(frame$number_hhs)
frame1 <- subset(frame, number_hhs > 200)
View(frame1)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT +
TA_CODE + VILLAGE_NAME +
RESIDENCE, sampling_frame, sum)
sampling_frame_hhs <- subset(frame, number_hhs > 200)
names(sampling_frame_hhs)
table(sampling_frame_hhs$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
sampling_frame_sort <- arrange(sampling_frame_hhs,
DISTRICT, TA_CODE, GVH_NAME,
VILLAGE_NAME, desc(number_hhs))
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
table(sampling_frame_sort$DISTRICT)
sampling_frame_hhs <- subset(sampling_frame_hhs, number_hhs > 200)
names(sampling_frame_hhs)
table(sampling_frame_hhs$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
sampling_frame_sort <- arrange(sampling_frame_hhs, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
table(sampling_frame_sort$DISTRICT)
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
val_lab(sampling_frame_hhs$RESIDENCE)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
library(expss)
library(magrittr)
library(forcats)
library(haven)
library(tidyverse)
library(ggplot2)
library(gmodels)
# set working directory
setwd("C:/git/MALAWI/malawi/RCT/sampling")
# bring in all the census data of all households
census_list <- read_dta("census_data_2018.dta")
census_list <- census_list[ , -which(names(census_list) %in%
c("SEGMENT", "DATE_OF_BIRTH", "EA_CODE",
"Sex", "Residential_District" ))]
str(census_list)
class(census_list$DISTRICT)
val_lab(census_list$DISTRICT)
study_dists <- census_list[census_list$DISTRICT %in% c("201",
"204",
"104",
"105",
"203",
"207"), ]
val_lab(study_dists$DISTRICT) = num_lab("104 Rumphi
105 Mzimba
201 Kasungu
203 Ntchisi
204 Dowa
207 Mchinji")
val_lab(study_dist$DISTRICT)
val_lab(study_dists$DISTRICT)
sampling_frame <- subset(study_dists, RELATIONSHIP == 1)
as.factor(study_dist_hh$DISTRICT)
as.integer(study_dist_hh$RELATIONSHIP)
as.factor(study_dists_hh$DISTRICT)
as.integer(study_dists_hh$RELATIONSHIP)
as.factor(study_dists_hh$VILLAGE_NAME)
as.factor(sampling_frame$DISTRICT)
as.integer(sampling_frame$RELATIONSHIP)
as.factor(sampling_frame$VILLAGE_NAME)
sampling_frame$number_hhs <- sampling_frame$RELATIONSHIP
remove(census_list, study_dist)
remove(study_dists)
# aggregating to total up the number of households per VILLAGE_NAME
table(sampling_frame$DISTRICT)
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
table(sampling_frame_hhs$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
sampling_frame_sort <- arrange(sampling_frame_hhs, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
sampling_frame_sort <- arrange(sampling_frame_hhs1, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
names(sampling_frame_hhs1)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE + GVH_NAME + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
table(sampling_frame_hhs1$DISTRICT)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +  GVH_NAME + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
sampling_frame_sort <- arrange(sampling_frame_hhs1, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
table(sampling_frame_sort$DISTRICT)
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
set.seed(782644416)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
as.factor(sampling_frame$TA_CODE)
as.factor(sampling_frame$GVH_NAME)
sampling_frame$number_hhs <- sampling_frame$RELATIONSHIP
remove(census_list, study_dists)
# aggregating to total up the number of households per VILLAGE_NAME
table(sampling_frame$DISTRICT)
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +  GVH_NAME + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
table(sampling_frame_hhs1$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
names(sampling_frame_hhs1)
sampling_frame_sort <- arrange(sampling_frame_hhs1, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
table(sampling_frame_sort$DISTRICT)
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
## random sampling of the study villages
set.seed(782644416)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
sample2 <- subset(sampling_frame_hhs, VILLAGE_NAME == )
sample2 <- subset(sampling_frame_hhs, VILLAGE_NAME == " ")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("magrittr")
install.packages("expss")
install.packages("gmodels")
install.packages("stats")
library(expss)
library(magrittr)
library(forcats)
library(haven)
library(tidyverse)
library(ggplot2)
library(gmodels)
library(stats)
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("magrittr")
install.packages("expss")
install.packages("gmodels")
library(expss)
library(magrittr)
library(forcats)
library(haven)
library(tidyverse)
library(ggplot2)
library(gmodels)
# set working directory
setwd("C:/git/MALAWI/malawi/RCT/sampling")
# bring in all the census data of all households
census_list <- read_dta("census_data_2018.dta")
census_list <- census_list[ , -which(names(census_list) %in%
c("SEGMENT", "DATE_OF_BIRTH", "EA_CODE",
"Sex", "Residential_District" ))]
str(census_list)
class(census_list$DISTRICT)
# keep only the 6 study districts
val_lab(census_list$DISTRICT)
# (104- Rumphi; 105- Mzimba; 201- Kasungu; 203- Ntchisi;
# 204- Dowa; 207- Mchinji)
study_dists <- census_list[census_list$DISTRICT %in% c("201",
"204",
"104",
"105",
"203",
"207"), ]
val_lab(study_dists$DISTRICT) = num_lab("104 Rumphi
105 Mzimba
201 Kasungu
203 Ntchisi
204 Dowa
207 Mchinji")
val_lab(study_dists$DISTRICT)
# keeping RELATIONSHIP == 1 (hh head) to remove duplicates for hhs
sampling_frame <- subset(study_dists, RELATIONSHIP == 1)
as.factor(sampling_frame$DISTRICT)
as.integer(sampling_frame$RELATIONSHIP)
as.factor(sampling_frame$VILLAGE_NAME)
as.factor(sampling_frame$TA_CODE)
as.factor(sampling_frame$GVH_NAME)
sampling_frame$number_hhs <- sampling_frame$RELATIONSHIP
remove(census_list, study_dists)
# aggregating to total up the number of households per VILLAGE_NAME
table(sampling_frame$DISTRICT)
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +  GVH_NAME + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
sc <- sampling_frame_hhs1
sample(sc$TA_CODE, sizsize = 30)
remove(sc)
counties <- sample_n(sampling_frame_hhs1$TA_CODE, 36)
sampling_frame_hhs1 <- sampling_frame_hhs1[complete.cases(sampling_frame_hhs1), ]
table(sampling_frame_hhs1$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
names(sampling_frame_hhs1)
sampling_frame_sort <- arrange(sampling_frame_hhs1, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
table(sampling_frame_sort$DISTRICT)
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
## random sampling of the study villages
set.seed(782644416)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
library(expss)
library(magrittr)
library(forcats)
library(haven)
library(tidyverse)
library(ggplot2)
library(gmodels)
# set working directory
setwd("C:/git/MALAWI/malawi/RCT/sampling")
# bring in all the census data of all households
census_list <- read_dta("census_data_2018.dta")
install.packages("stats")
library(stats)
census_list <- census_list[ , -which(names(census_list) %in%
c("SEGMENT", "DATE_OF_BIRTH", "EA_CODE",
"Sex", "Residential_District" ))]
str(census_list)
class(census_list$DISTRICT)
# keep only the 6 study districts
val_lab(census_list$DISTRICT)
# (104- Rumphi; 105- Mzimba; 201- Kasungu; 203- Ntchisi;
# 204- Dowa; 207- Mchinji)
study_dists <- census_list[census_list$DISTRICT %in% c("201",
"204",
"104",
"105",
"203",
"207"), ]
val_lab(study_dists$DISTRICT) = num_lab("104 Rumphi
105 Mzimba
201 Kasungu
203 Ntchisi
204 Dowa
207 Mchinji")
val_lab(study_dists$DISTRICT)
# keeping RELATIONSHIP == 1 (hh head) to remove duplicates for hhs
sampling_frame <- subset(study_dists, RELATIONSHIP == 1)
as.factor(sampling_frame$DISTRICT)
as.integer(sampling_frame$RELATIONSHIP)
as.factor(sampling_frame$VILLAGE_NAME)
as.factor(sampling_frame$TA_CODE)
as.factor(sampling_frame$GVH_NAME)
sampling_frame$number_hhs <- sampling_frame$RELATIONSHIP
remove(census_list, study_dists)
# aggregating to total up the number of households per VILLAGE_NAME
table(sampling_frame$DISTRICT)
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +  GVH_NAME + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
sampling_frame_hhs1 <- sampling_frame_hhs1[complete.cases(sampling_frame_hhs1), ]
table(sampling_frame_hhs1$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
names(sampling_frame_hhs1)
sampling_frame_sort <- arrange(sampling_frame_hhs1, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
table(sampling_frame_sort$DISTRICT)
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
## random sampling of the study villages
set.seed(782644416)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
library(stats)
library(expss)
library(magrittr)
library(forcats)
library(haven)
library(tidyverse)
library(ggplot2)
library(gmodels)
# set working directory
setwd("C:/git/MALAWI/malawi/RCT/sampling")
# bring in all the census data of all households
census_list <- read_dta("census_data_2018.dta")
census_list <- census_list[ , -which(names(census_list) %in%
c("SEGMENT", "DATE_OF_BIRTH", "EA_CODE",
"Sex", "Residential_District" ))]
str(census_list)
class(census_list$DISTRICT)
# keep only the 6 study districts
val_lab(census_list$DISTRICT)
# (104- Rumphi; 105- Mzimba; 201- Kasungu; 203- Ntchisi;
# 204- Dowa; 207- Mchinji)
study_dists <- census_list[census_list$DISTRICT %in% c("201",
"204",
"104",
"105",
"203",
"207"), ]
val_lab(study_dists$DISTRICT) = num_lab("104 Rumphi
105 Mzimba
201 Kasungu
203 Ntchisi
204 Dowa
207 Mchinji")
val_lab(study_dists$DISTRICT)
# keeping RELATIONSHIP == 1 (hh head) to remove duplicates for hhs
sampling_frame <- subset(study_dists, RELATIONSHIP == 1)
as.factor(sampling_frame$DISTRICT)
as.integer(sampling_frame$RELATIONSHIP)
as.factor(sampling_frame$VILLAGE_NAME)
as.factor(sampling_frame$TA_CODE)
as.factor(sampling_frame$GVH_NAME)
sampling_frame$number_hhs <- sampling_frame$RELATIONSHIP
remove(census_list, study_dists)
# aggregating to total up the number of households per VILLAGE_NAME
table(sampling_frame$DISTRICT)
names(sampling_frame)
sampling_frame_hhs <- aggregate(number_hhs ~ DISTRICT + TA_CODE +  GVH_NAME + VILLAGE_NAME + RESIDENCE, sampling_frame, sum)
val_lab(sampling_frame_hhs$RESIDENCE) = num_lab("1 Urban
2 Rural")
sampling_frame_hhs1 <- subset(sampling_frame_hhs, number_hhs > 200)
sampling_frame_hhs1 <- sampling_frame_hhs1[complete.cases(sampling_frame_hhs1), ]
table(sampling_frame_hhs1$DISTRICT)
# sort by DISTRICT and number of hhs in each VILLAGE_NAME
names(sampling_frame_hhs1)
sampling_frame_sort <- arrange(sampling_frame_hhs1, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
table(sampling_frame_sort$DISTRICT)
# output sampling frame with total hhs per VILLAGE_NAME
write.csv(sampling_frame_sort,"C:/git/MALAWI/malawi/RCT/sampling/total_hhs_per_village.csv", row.names = TRUE)
table(sampling_frame_sort$DISTRICT)
## random sampling of the study villages
set.seed(782644416)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
set.seed(782644417)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
sampled_villages <- sample_n(sampling_frame_sort, 215)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
?quarters()
set.seed(782644418)
# Treatments will be implemented in 113 villages.
# But we will also collect price data from another 30 villages
# 113 + 30 = 143 villages to be sampled.
# we need to study effects between large and samll villages.
# we increase 143 by 33% = 215 villages, such that;
# from the 215 villages, 66% large and small villages will be sampled.
sampled_villages <- sample_n(sampling_frame_sort, 215)
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
yyy <- xtile(sampled_villages, n = 3, rev = FALSE, type = 7)
## random sampling of the study villages
set.seed(782644418)
# Treatments will be implemented in 113 villages.
# But we will also collect price data from another 30 villages
# 113 + 30 = 143 villages to be sampled.
sampled_villages <- sample_n(sampling_frame_sort, 143)
table(sampled_villages$VILLAGE_NAME)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
## random sampling of the study villages
set.seed(782644418)
sampled_villages <- sample_n(sampling_frame_sort, 143)
# sorting the sampled villages
sampled_villages <- arrange(sampled_villages, DISTRICT, TA_CODE, GVH_NAME, VILLAGE_NAME, desc(number_hhs))
# output sampled villages
write.csv(sampled_villages,"C:/git/MALAWI/malawi/RCT/sampling/sampled_villages.csv", row.names = TRUE)
